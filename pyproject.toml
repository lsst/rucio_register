[build-system]
requires = ["setuptools", "lsst-versions >= 1.3.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lsst-rucio-register"
requires-python = ">=3.11.0"
description = "Tools for registering LSST metadata information into Rucio"
license = {text = "GNU General Public License v3 or later (GPLv3+)"}
readme = "README.md"
authors = [
    {name="Rubin Observatory Data Management", email="dm-admin@lists.lsst.org"},
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
]
keywords = ["lsst"]
dependencies = [
    "pyyaml >=5.1",
    "lsst-utils",
    "lsst-daf-butler",
    "pydantic >=2,<3.0",
    "rucio-clients",
]

dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/lsst/rucio_register"

[project.scripts]
rucio-register = "lsst.rucio.register.script:main"
export-datasets = "lsst.rucio.register.export:main"

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110
known_first_party = ["lsst"]

[tool.lsst_versions]
write_to = "python/lsst/rucio/register/version.py"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"  # Recommended as best practice

[tool.setuptools.packages.find]
where = ["python"]

[tool.setuptools]
zip-safe = true
license-files = ["COPYRIGHT", "LICENSE"]

[tool.ruff]
line-length = 110
target-version = "py311"
exclude = [
    "__init__.py",
]

[tool.ruff.lint]
ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
]
select = [
    "E",  # pycodestyle
    "F",  # pycodestyle
    "N",  # pep8-naming
    "W",  # pycodestyle
    "UP",  # pyupgrade
    "I",  # isort
    "RUF022",  # sort __all__
]

[tool.ruff.lint.per-file-ignores]
# parserYacc docstrings can not be fixed. Docstrings are used to define grammar.
"python/lsst/daf/butler/registry/queries/expressions/parser/parserYacc.py" = ["D401", "D403"]

[tool.ruff.lint.isort]
known-first-party = ["lsst"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
# Formatter does not know about indenting.
docstring-code-line-length = 69
